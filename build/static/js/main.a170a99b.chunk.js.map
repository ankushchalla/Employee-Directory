{"version":3,"sources":["components/EmployeeRow.js","App.js","index.js"],"names":["EmployeeRow","firstName","lastName","email","state","className","App","useState","directoryState","setDirectoryState","useEffect","axios","get","then","allUsers","data","results","map","result","name","first","last","location","id","login","uuid","type","class","onClick","e","event","sortedDirectory","employee","sort","a","b","sortByLastName","onChange","target","value","toLowerCase","filter","includes","filterByState","placeholder","scope","ReactDOM","render","document","getElementById"],"mappings":"iLAeeA,MAbf,YAA2D,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAC9C,OACI,mCACI,+BACI,oBAAIC,UAAU,aAAd,SAAoCJ,GAAL,KAC/B,oBAAII,UAAU,YAAd,SAAmCH,GAAL,KAC9B,oBAAIG,UAAU,QAAd,SAA+BF,GAAL,KAC1B,oBAAIE,UAAU,QAAd,SAA+BD,GAAL,W,iBCsE3BE,MA3Ef,WAAgB,IAAD,EACiCC,mBAAS,IAD1C,mBACJC,EADI,KACYC,EADZ,KAoCX,OAjCAC,qBAAU,WACNC,IAAMC,IAAI,gDACLC,MAAK,SAAAC,GACFL,EAAkBK,EAASC,KAAKC,QAAQC,KAAI,SAAAC,GASxC,MARmB,CACfjB,UAAWiB,EAAOC,KAAKC,MACvBlB,SAAUgB,EAAOC,KAAKE,KACtBlB,MAAOe,EAAOf,MAEdC,MAAOc,EAAOI,SAASlB,MACvBmB,GAAIL,EAAOM,MAAMC,eAKlC,IAmBC,sBAAKpB,UAAU,iBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sDAEJ,qBAAKA,UAAU,QAAf,SAAuB,wBAAQqB,KAAK,SAASC,MAAM,kBAAkBC,QAAS,SAACC,GAAD,OAtBnE,SAACC,GAEpB,IAAIC,EAAkBvB,EAAeS,KAAI,SAAAe,GAAQ,OAAIA,KAChDC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEhC,UAAYiC,EAAEjC,SAAW,GAAK,KACpDO,EAAkBsB,GAkB2EK,IAA9D,kCACvB,qBAAK/B,UAAU,QAAf,SACI,qBAAKsB,MAAM,mBAAX,SACI,uBAAOD,KAAK,OAAOW,SAAU,SAACR,IAjB5B,SAACC,GAEnB,IAAI1B,EAAQ0B,EAAMQ,OAAOC,MAAMC,cAC/B/B,EAAkBD,EAAeiC,QAAO,SAAAT,GACpC,OAAOA,EAAS5B,MAAMoC,cAAcE,SAAStC,OAaKuC,CAAcd,IAAMxB,UAAU,eAAeuC,YAAY,4BAM3G,wBAAOvC,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIwC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGR,gCACKrC,EAAeS,KAAI,SAAAe,GAAQ,OAAI,cAAC,EAAD,CAC5B/B,UAAW+B,EAAS/B,UACpBC,SAAU8B,EAAS9B,SACnBC,MAAO6B,EAAS7B,MAChBC,MAAO4B,EAAS5B,OACX4B,EAAST,gBCjEtCuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a170a99b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeRow({firstName, lastName, email, state}) {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td className=\"first-name\" key=\"1\">{firstName}</td>\r\n                <td className=\"last-name\" key=\"2\">{lastName}</td>\r\n                <td className=\"email\" key=\"3\">{email}</td>\r\n                <td className=\"state\" key=\"4\">{state}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmployeeRow;","import React, { useState, useEffect } from \"react\";\r\nimport EmployeeRow from \"./components/EmployeeRow\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n    const [directoryState, setDirectoryState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://randomuser.me/api/?results=50&nat=us')\r\n            .then(allUsers => {\r\n                setDirectoryState(allUsers.data.results.map(result => {\r\n                    let employeeInfo = {\r\n                        firstName: result.name.first,\r\n                        lastName: result.name.last,\r\n                        email: result.email,\r\n                        // 'State' as in California, not a React state. \r\n                        state: result.location.state,\r\n                        id: result.login.uuid\r\n                    }\r\n                    return employeeInfo;\r\n                }));\r\n            })\r\n    }, [])\r\n\r\n    const sortByLastName = (event) => {\r\n        // Setting state must always involve creating a new object, array, etc. \r\n        let sortedDirectory = directoryState.map(employee => employee)\r\n            .sort((a, b) => a.lastName >= b.lastName ? 1 : -1);\r\n        setDirectoryState(sortedDirectory);\r\n    }\r\n\r\n    // Backspace doesn't work since you're permanently changing state (until reload).\r\n    const filterByState = (event) => {\r\n        // 'State' as in California, not a React state. \r\n        let state = event.target.value.toLowerCase();\r\n        setDirectoryState(directoryState.filter(employee => {\r\n            return employee.state.toLowerCase().includes(state);\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h1>Employee Directory</h1>\r\n                </div>\r\n                <div className=\"col-3\"><button type=\"button\" class=\"btn btn-primary\" onClick={(e) => sortByLastName(e)}>Sort by last name.</button></div>\r\n                <div className=\"col-3\">\r\n                    <div class=\"input-group mb-3\">\r\n                        <input type=\"text\" onChange={(e) => { filterByState(e) }} className=\"form-control\" placeholder=\"Filter by state.\" />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">State</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {directoryState.map(employee => <EmployeeRow\r\n                        firstName={employee.firstName}\r\n                        lastName={employee.lastName}\r\n                        email={employee.email}\r\n                        state={employee.state}\r\n                        key={employee.id} />\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}